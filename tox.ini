[tox]
skipsdist = True
envlist = py27,py35,py36,py37,pre-commit
python_env_info =
	python -c "" # Let's print this, it's usefull for debugging especially on Windows
	python -c "import sys; print('Python Interpreter\n\{\}'.format(sys.version))"
	python -c "import os; print('Environmental Variables\n\{\}'.format('\n'.join('\{\} -> \{\}'.format(k, v) for k, v in os.environ.items())))"

[testenv]
setenv =
	RUSTUP_TOOLCHAIN = {env:RUSTUP_TOOLCHAIN:nightly}
	PIP_INSTALL = {env:PIP_INSTALL:pip install}
deps = -rrequirements-dev.txt
passenv =
	RUST_BACKTRACE
commands =
	{[tox]python_env_info}
	{env:PIP_INSTALL} {toxinidir}
	python -m pytest {posargs:python/tests}

[testenv:cargo_test]
whitelist_externals =
	cargo
commands =
	{[tox]python_env_info}
	cargo test {env:CARGO_TESTS_ARGS:--all-features}

[testenv:coverage]
basepython = python3.6
platform = linux
passenv =
	{[testenv]passenv}
	HOME
setenv =
	{[testenv]setenv}
	PIP_INSTALL = {env:PIP_INSTALL:pip install -e}
whitelist_externals =
	bash
	cargo
	kcov
commands =
	{[tox]python_env_info}
	{env:PIP_INSTALL} {toxinidir}
	coverage erase
	coverage run -m pytest {posargs:python/tests}
	coverage report
	cargo test --no-run
	cargo kcov --version  # ensure that cargo-kcov is installed
	kcov --version	# ensure that kcov is installed
	bash -c "find target/debug/deps/ -name rust_swagger_validator_tests* -type f -executable | while read executable; do \
	mkdir -p .rust_coverage/$(basename $\{executable\}); \
	kcov --exclude-pattern=/.cargo,/usr/lib --verify .rust_coverage/$(basename $\{executable\}) $\{executable\}; \
	done"

[testenv:lint]
basepython = python3.6
deps = pre-commit
whitelist_externals =
	cargo
commands =
	pre-commit run --all-files
	cargo clippy -- -Dwarnings

[testenv:venv]
basepython = python3.6
envdir = {toxinidir}/venv
commands =

[flake8]
max-line-length = 141

[pep8]
ignore = E265,E501
