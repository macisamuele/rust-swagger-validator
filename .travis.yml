# Please make sure to only modify the template file and not the generated ones.
# Check ${GIT_REPO_ROOT}/ci/gi-config.py too verify how the template is used.
language: python

dist: xenial
sudo: false

matrix:
  fast_finish: true
  include:
  - os: linux
    env: TOXENV=lint
    python: '3.6'
  - os: linux
    env: TOXENV=coverage
    python: '3.6'
    sudo: required
    addons:
      apt:
        packages:
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - cmake
        - gcc
        - binutils-dev
        - libiberty-dev
  - os: linux
    env: TOXENV=py27
    python: '2.7'
  - os: osx
    env: TOXENV=py27 PYTHON=2.7.15
    language: generic
  - os: linux
    env: TOXENV=py35
    python: '3.5'
  - os: osx
    env: TOXENV=py35 PYTHON=3.5.6
    language: generic
  - os: linux
    env: TOXENV=py36
    python: '3.6'
  - os: osx
    env: TOXENV=py36 PYTHON=3.6.6
    language: generic
  - os: linux
    env: TOXENV=py37
    python: '3.7'
    sudo: required
  - os: osx
    env: TOXENV=py37 PYTHON=3.7.0
    language: generic
  - os: linux
    env: TOXENV=cargo_test ALLOW_FAILURE=true
    python: '2.7'
  - os: osx
    env: TOXENV=cargo_test PYTHON=2.7.15 ALLOW_FAILURE=true
    language: generic
  - os: linux
    env: TOXENV=cargo_test
    python: '3.5'
  - os: osx
    env: TOXENV=cargo_test PYTHON=3.5.6
    language: generic
  - os: linux
    env: TOXENV=cargo_test
    python: '3.6'
  - os: osx
    env: TOXENV=cargo_test PYTHON=3.6.6
    language: generic
  - os: linux
    env: TOXENV=cargo_test
    python: '3.7'
    sudo: required
  - os: osx
    env: TOXENV=cargo_test PYTHON=3.7.0
    language: generic
  allow_failures:
  - env: TOXENV=cargo_test ALLOW_FAILURE=true
  - env: TOXENV=cargo_test PYTHON=2.7.15 ALLOW_FAILURE=true

install:
- |
  # code extracted from https://pythonhosted.org/CodeChat/.travis.yml.html
  if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
    # Ensure that ccache is installed so subsequent build could be take advantage of caching ccache
    if ! find /usr/local/Cellar/ccache/*/bin/ccache -quit; then
      time brew install ccache
    fi
    if ! find /usr/local/Cellar/pyenv/*/bin/pyenv -quit; then
      time brew install pyenv
    fi
    if ! find /usr/local/Cellar/pyenv-virtualenv/*/bin/pyenv-virtualenv -quit; then
      time brew install pyenv-virtualenv
    fi
    # Ensure that the required python version is installed, if not going to install it
    if ! pyenv versions | grep -q ${PYTHON}; then
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      time brew install openssl readline sqlite3 xz zlib
      time pyenv install ${PYTHON}
    fi
    export PATH="/usr/local/opt/ccache/libexec:${PATH}" # From https://docs.travis-ci.com/user/caching/#ccache-on-os-x
    export PYENV_VERSION=${PYTHON}
    export PATH="${HOME}/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    python --version
  fi
- export RUST_BACKTRACE=full
- export PYTHONUNBUFFERED=1
- pip install codecov tox-pip-extensions
- |
  # Define the default rust-toolchain to install
  RUST_TOOLCHAIN=nightly
  if [ "${TOXENV}" == "lint" ]; then
    # Use "old" toolchain as clippy-preview component is not available on latest toolchain
    export RUST_TOOLCHAIN=nightly-2018-08-31
  fi
  export RUST_TOOLCHAIN
- |
  # Installing rust from sources is faster than caching it, additionally it removes the issue of using a "stale" nightly version
  curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none --verbose -y
  export PATH=${HOME}/.cargo/bin:${PATH}
  echo rustup install ${RUST_TOOLCHAIN}
  rustup install ${RUST_TOOLCHAIN}
- |
  # Install rustfmt and clippy in case of lint tests
  if [ "${TOXENV}" == "lint" ]; then
    rustup component add rustfmt-preview --toolchain ${RUST_TOOLCHAIN}
    rustup component add clippy-preview --toolchain ${RUST_TOOLCHAIN}
  fi
- |
  # Install cargo-kcov dependencies (we don't need to do it in tox and keep it clean)
  if [ "${TRAVIS_OS_NAME}" == "linux" -a "${TOXENV}" == "coverage" ]; then
    command -v cargo-kcov &> /dev/null || cargo install cargo-kcov
    command -v kcov &> /dev/null || ( cargo kcov --print-install-kcov-sh | sh)
    command -v cargo-kcov
    command -v kcov
  fi

before_script:
# Print versions of the interesting tools
- rustc --version --verbose
- cargo --version --verbose
- python -c "import sys;print(sys.version)"
- pip --version
- tox --version

script:
- tox

after_success:
- if [ "${TOXENV}" == "coverage" ]; then codecov --verbose; fi

before_cache:
# Print build.rs so we could expose information related to rust build
- find target/*/build/rust_swagger_validator-*/out/built.rs | while read path; do echo ${path} && cat ${path} && echo && echo; done
# Delete artifacts of this specific library. This allows to reduce the amount of differences for the cache
# NOTE: this means that rust_swagger_validator will be built every time but we gain on not building all the dependencies
- find ${TRAVIS_BUILD_DIR}/target/*/*rust_swagger_validator* | xargs rm -rfv
- find ${TRAVIS_BUILD_DIR}/target/*/*/*rust_swagger_validator* | xargs rm -rfv
- find ${TRAVIS_BUILD_DIR}/target/*/.fingerprint/*rust_swagger_validator* | xargs rm -rfv
# Remove build_script information
- find ${TRAVIS_BUILD_DIR}/target/*/build_script_build* | xargs rm -rfv
- find ${TRAVIS_BUILD_DIR}/target/*/*/build_script_build* | xargs rm -rfv
# Delete empty directories (reduce probability of difference in cache)
- find ${TRAVIS_BUILD_DIR}/target -depth -type d -empty -exec rm -rfv {} \;
# Don't cache crate registry, it's going to change every time and so cache will be invalidated and regenerated too often
- rm -rf ${HOME}/.cargo/registry/index/
# Print size statistics of cached directories (hopefully those are kept in sync with #/cache/directories)
- du -sh ${HOME}/.ccache ${HOME}/.cache/pip ${HOME}/.cache/pip-faster ${HOME}/.cache/pre-commit ${HOME}/.cargo/ ${HOME}/.pyenv/ ${HOME}/.rustup/ ${HOME}/Library/Caches/Homebrew ${TRAVIS_BUILD_DIR}/target /usr/local/Cellar/

cache:
  timeout: 3600
  cargo: true
  ccache: true
  pip: true
  directories:
  - ${HOME}/.cache/pip-faster
  - ${HOME}/.cache/pre-commit
  - ${TRAVIS_BUILD_DIR}/kcov-v*
  # Caching of homebrew dependencies
  - ${HOME}/Library/Caches/Homebrew
  - /usr/local/Cellar/
  - ${HOME}/.pyenv/

notifications:
  email: false
  slack:
    # Personal Slack notification
    secure: n2hl9R7lleh8S7TYVzgq5IFI1NTVV84DcCraDTF8UZR3vSRzIgbnXx1KxXzJdcC5oyCdo3m0T7iyr/L46jZnWP9fEGxYEiK9cTDquSy5huTy92M9xPcqvXVny2OJhbX9B667/HS4o34HvixaAGv3/Y0iKWgvpT9esX8vH6Uh05IE7YrXZPQnteuhOSdXelYUtqz+5H1r36YVzrNWAaXKOclYxURLKr5rp0Nil+rIiKFM5AJfStYb/xrIrog8uSCi12uUgKw43d0GCTCRytjiMIt2gOBOMgcDc9j9nEEQcPuOWemj+fg6IVCtT4jrjLqSiLegzGCZsyyzeJUHCbi6YJUDNelWKmD8F13AufXciCbJMZCrXIPS7/XX8iKIaYBP3/Z0Bfw0Rtyu0fYb+VhwF6FDMwpp9NKARhBMauANnaEzVGuspV6s4cyRyQSnj55UELiGqgr2+REg/eKRm4cWT1Lnc+SidjsA7S/pBWCpusNea5j1l69As5pAdCnKFHH3Jbt5KadY5qGYxlb2t/iYHofI/0pp57J97wmooKVOk533djtuFF7iqemNM7dHUuVE0xW0ug1fCgbmMQoE6QePtLfO4MnsHsc0hLsZYm2Gl7iMdExTWShZfmdrGFkRr79L5xuEV2nM1JZYa0Pi5ue18YUuk5nwnH3LINR/FNXr0bo=
